#!/bin/bash

APIKEY=
SERVICE=https://nebula.precog.com
ANALYTICS_SERVICE=
META_SERVICE=

STARTDIR="`pwd`"
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$STARTDIR"

TIMESTAMP=`date -u +"%Y-%m-%d-%H-%M-%S"`
DUMPFILE="precog-dump-$TIMESTAMP.tar.gz"
VERBOSE=

function usage {
  echo "Usage: export [-v] [-s service] [-o outfile] -a apikey path1 path2 ..."
}

while getopts "a:s:o:h:v" opt; do
  case $opt in
    a  ) APIKEY=$OPTARG;;
    s  ) SERVICE=$OPTARG;;
    o  ) DUMPFILE=$OPTARG;;
    v  ) VERBOSE=true;;
    h  ) usage;;
    \? ) echo "Unknown otion -$OPTARG" >&2; exit 1;;
    :  ) echo "Unknown otion argument for -$OPTARG" >&2; exit 1;;
  esac
done

shift $(( ${OPTIND} - 1 ))

if [[ -z "$*" ]]; then
  usage
  exit 1
fi

if [[ -z "$SERVICE" ]]; then
  echo "Service (-s) is required!" >&2
  exit 1
fi

if [[ -z "$APIKEY" ]]; then
  echo "API key (-a) is required!" >&2
  usage
  exit 1
fi

DUMPPATH=`mktemp -d -t precog-dump.XXXXXXXXXX`
INDEXFILE="$DUMPPATH/index"

if [[ -z "$ANALYTICS_SERVICE" ]]; then
  ANALYTICS_SERVICE="$SERVICE/analytics/v1/fs"
fi

if [[ -z "$META_SERVICE" ]]; then
  META_SERVICE="$SERVICE/meta/v1/fs"
fi

function meta {
  curl --silent "$META_SERVICE/$1?apiKey=$APIKEY"
}

function children {
  local json=`meta $1`
  python << EOF
import json
meta=json.loads(u"""$json""")
print '\n'.join(meta["children"])
EOF
}

function size {
  local json=`meta $1`
  python << EOF
import json
meta=json.loads(u"""$json""")
print meta["size"]
EOF
}

function get_json {
  curl --silent "$ANALYTICS_SERVICE/$1?apiKey=$APIKEY&q=//$2"
}

function norm_path {
  echo $1 | sed -E 's|/+|/|g' | sed -E 's|/$||g'
}

function log {
  [[ -n $VERBOSE ]] && echo $*
}

function dump {
  local basepath=$1
  local filename=$2
  local fullpath=`norm_path "$1/$2"`

  local size=`size $fullpath`
  if [[ $size -gt 0 ]]; then
    local datafile=`norm_path $DUMPPATH/$fullpath.json.gz`
    mkdir -p "`norm_path $DUMPPATH/$basepath`"
    log "Dumping $size events from $fullpath"
    get_json "$basepath" "$filename" | gzip -c > "$datafile"
    echo "$fullpath" >> "$INDEXFILE"
    echo "$fullpath.json.gz" >> "$INDEXFILE"
  fi

  local children=`children $fullpath`
  if [[ "$children" != "" ]]; then
    for child in $children; do
      dump $fullpath $child
    done
  fi
}

for path in $*; do
  log Dumping all data from `norm_path "/$path"` to "$DUMPFILE".
  dump $path
done

TEMPDUMPFILE=`mktemp -t precog-dump-tarball.XXXXXXXXXX`
cd $DUMPPATH
if [[ -n "$(ls -A .)" ]]; then
  tar czf "$TEMPDUMPFILE" *
else
  echo "No data found under $path!" >&2
  exit 2
fi
cd $STARTDIR

mv "$TEMPDUMPFILE" "$DUMPFILE"
echo Precog data dumped to $DUMPFILE
