#!/bin/bash

STARTDIR="`pwd`"
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$STARTDIR"

APIKEY=
ACCOUNTID=
SERVICE=https://nebula.precog.com
INGEST_SERVICE=

VERBOSE=

function usage {
  echo Usage: import [-v] [-s service] [-i ingest_service] [-u account_id] -a apikey export-tarball
}

while getopts "a:s:u:i:h:v" opt; do
  case $opt in
    a  ) APIKEY=$OPTARG;;
    s  ) SERVICE=$OPTARG;;
    i  ) INGEST_SERVICE=$OPTARG;;
    u  ) ACCOUNTID=$OPTARG;;
    v  ) VERBOSE=true;;
    h  ) usage;;
    \? ) echo "Unknown otion -$OPTARG" >&2; exit 1;;
    :  ) echo "Unknown otion argument for -$OPTARG" >&2; exit 1;;
  esac
done

shift $(( ${OPTIND} - 1 ))

if [[ -z "$SERVICE" ]]; then
  echo "Service (-s) is required!" >&2
  exit 1
fi

if [[ -z "$*" ]]; then
  usage
  exit 1
fi

if [[ -z "$APIKEY" ]]; then
  echo "API key (-a) is required!" >&2
  usage
  exit 1
fi

if [[ -z "$INGEST_SERVICE" ]]; then
  INGEST_SERVICE="$SERVICE/ingest/v1/fs"
fi

function log {
  [[ -n $VERBOSE ]] && echo $*
}

function ingest {
  local suffix=$([[ $ACCOUNTID ]] && "&$ACCOUNTID" || "")
  gunzip -c "$2" | curl --silent -H 'Content-Type: application/x-json-stream' --data-binary @- "$INGEST_SERVICE/fs/$1?apiKey=$APIKEY$suffix"
}

function import {
  local dump_file=$1

  local workdir=
  if [[ -d "$dump_file" ]]; then
    workdir="$dump_file"
  elif [[ -f "$dump_file" ]]; then
    workdir=`mktemp -d -t precog-import.XXXXXXXXXX`
    log "Extracting dump file to $workdir..."
    tar -xzf $dump_file -C $workdir
  else
    echo "Cannot read from $dump_file" >&2
    exit 2
  fi

  local indexfile="$workdir/index"
  if [[ ! -f "$index_file" ]]; then
    echo "Invalid dump file, cannot find index" >&2
    exit 2
  fi

  log "Importing all data from $dump_file"
  exec 5< "$indexfile"
  
  while read path <&5; do
    read suffix <&5
    local json_file="$workdir/$suffix"
    log "Importing JSON data from $suffix to $path"
    ingest "$path" "$json_file"
  done
}

for dump in $*; do
  import "$dump"
done

echo "Done importing data!"
